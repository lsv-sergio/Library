@model Library.Models.BookEditModel

@using (Html.BeginForm("Edit", "Books", new { id = Model.Id }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="col-md-offset-3">
            @{ var title = "Редактирование книги";
             if (Model.Id == 0)
             {
                 title = "Добавление книги";
             }
            }
            <h4>@title</h4>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row">
            <div class="col-md-3">
                <img src="~/Content/noimage.gif" />
            </div>
            <div class="col-md-9 text-left">
                <div class="row form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Name, htmlAttributes:new {@class="control-label"})
                    </div>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "Введите название" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.AuthorId, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.AuthorId, Model.AllAuthors, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookSeriesId, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.BookSeriesId, Model.AllBookSeries, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BookSeriesId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-md-3" >
                        @Html.LabelFor(model => model.PublishingHouseId, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.PublishingHouseId, Model.AllPublishingHouses, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PublishingHouseId, "", new { @class = "text-danger" })
                    </div>
                </div>

               <div class="row form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.PageCount, htmlAttributes: new { @class = "control-label" })
                    </div>
                   <div class="col-md-9">
                       @Html.TextBoxFor(model => model.PageCount, new { @class = "form-control" })
                       @Html.ValidationMessageFor(model => model.PageCount, "", new { @class = "text-danger" })
                   </div>
                </div>

                <div class="row form-group">
                    <input type="submit" value="Сохранить" class="btn btn-primary" />
                    @Html.ActionLink("Отмена", "Index", null, new { @class = "col-md-offset-1 btn btn-default" })
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script language="javascript" type="text/javascript">

        $(document).ready(function () {

            $("#PublishingHouseId").change(function () {

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetPublisherBookSeries", "BookSeries")/' + $(this).val(),
                    success: function (response) {

                        var bookSeries = $.parseJSON(response);
                        var ddlSelectedProduct = $("#BookSeriesId");

                        $("#BookSeriesId > option").remove();

                        for (i = 0; i < bookSeries.length; i++) {
                            ddlSelectedProduct.append($("<option />").val(bookSeries[i].Value).text(bookSeries[i].Text));
                        }
                    }

                });
            });

        });
    </script>
}